TheMatchApp

Version: 0.1 (beta)

Pages: 
    Home:
        - list of events DONE ✔️
        - map ==> add pin point in db //https://developers.google.com/maps/flutter-package/config#android_1
        - connected or not DONE ✔️
    
    Nav:
        - option to disconnect => statefull widget DONE ✔️

    Account:
        - image / pp
        - infos DONE ✔️
        - add calendar disponibility and queued Match
    
    Calendar: 
        - simple calendar // https://medium.com/flutter-community/flutter-use-google-calendar-api-adding-the-events-to-calendar-3d8fcb008493 DONE ✔️

DB:

- users infos DONE ✔️
- events DB DONE ✔️
- calendar DB DONE ✔️
- embedding of filters ==> use vectra for multi-modal vector database ==> p2p computing
- match making 

---------------------------------

- account DONE ✔️

- My calendar DONE ✔️ ==> add UI
- form DONE ✔️: 
    - working when creating a post DONE ✔️
    - draw pointers to the screen DONE ✔️
    - add a DONE button  DONE ✔️
    - specify what time of the day is the event (length)
    - add ui
- post EVENTS:
    - subscriber counter in server.js
    - subscription meter in EVENTS class
    - filter post
    - see where are post  DONE ✔️ ==> style
    - access a map of all near posts
    - map when scrolling ==> waze partnership
    - add UI
- My post DONE ✔️ ==> add UI
- queueING DONE ✔️
- Setting page DONE ✔️
- Profile page:
    - profile picture DONE ✔️
    - add users infos ==> add form to input and view ==> display infos DONE ✔️ 
    - add preference for matching algo ==> filters DONE ✔️
    - add UI 
- Friend page ==> to early
- add notification when subscribing  DONE ✔️, deleting DONE ✔️, removing DONE ✔️, submit event DONE ✔️
- error notification 
- manage deleted events DONE ✔️
- remove DONE ✔️
- delete DONE ✔️ ==> add a deleted event message to subscribe users

server: 
    -up DONE ✔️
    -p2p
    -ai 
    -combined with ec2 ==>later

app: 
 - up on ios ==> get logs
 - up on android ==> test



Match making algo:

format: 
User input: age-sex-[interests embeddings], event input: age(founder)-sex(founder)-[embedding of the event sport]
compare embeddings and lowest score difference = high ranked

Elo/sigmoid (vector db or neural net?)rating users to connect with events 

calitative score: embbed different qualities and produce a sigmoid output for likelyness 
then compare score to create a Elo rating of match and get a top K f.e 10 match

==> qualities: calendar, map and other fact with more and more data

Match filters (profile) for recommendation algo and normal filters (main.dart) that are additionnable for view page 

Tree friendship ==> chat, new people, research people ( quick add )

website: thematchapp.com

style the app!

Data: 
    - all the user data is decentralized (p2p or ipfs ==> keep fees as low as possible)
    - use p2p to deal with trees (connections with people/events)
    - events can be p2p and centralized depending on the availability of the p2p network

Plan for marketing: 
    - intnet tree (p2p connections between users, events and personnal preferences/filters)

Monetization:
    - set uo dAccount ==> pseudo anonymous in tree network  DONE ✔️
    - B2B with trees
    - SA data collection 
    - intnet cible
    - waze partnership

deploy server to AWS ec2 and deploy app to app store